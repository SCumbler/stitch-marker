// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PatternCreated.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SM.Service.Messages {

  /// <summary>Holder for reflection information generated from PatternCreated.proto</summary>
  public static partial class PatternCreatedReflection {

    #region Descriptor
    /// <summary>File descriptor for PatternCreated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PatternCreatedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQYXR0ZXJuQ3JlYXRlZC5wcm90bxIHcGF0dGVybhoNUGF0dGVybi5wcm90",
            "byI/Cg5QYXR0ZXJuQ3JlYXRlZBIKCgJpZBgBIAEoCRIhCgdwYXR0ZXJuGAUg",
            "ASgLMhAucGF0dGVybi5QYXR0ZXJuQhaqAhNTTS5TZXJ2aWNlLk1lc3NhZ2Vz",
            "UABiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SM.Service.Messages.PatternReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SM.Service.Messages.PatternCreated), global::SM.Service.Messages.PatternCreated.Parser, new[]{ "Id", "Pattern" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PatternCreated : pb::IMessage<PatternCreated> {
    private static readonly pb::MessageParser<PatternCreated> _parser = new pb::MessageParser<PatternCreated>(() => new PatternCreated());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatternCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SM.Service.Messages.PatternCreatedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatternCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatternCreated(PatternCreated other) : this() {
      id_ = other.id_;
      Pattern = other.pattern_ != null ? other.Pattern.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatternCreated Clone() {
      return new PatternCreated(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pattern" field.</summary>
    public const int PatternFieldNumber = 5;
    private global::SM.Service.Messages.Pattern pattern_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SM.Service.Messages.Pattern Pattern {
      get { return pattern_; }
      set {
        pattern_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatternCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatternCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pattern, other.Pattern)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (pattern_ != null) hash ^= Pattern.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (pattern_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Pattern);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (pattern_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pattern);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatternCreated other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.pattern_ != null) {
        if (pattern_ == null) {
          pattern_ = new global::SM.Service.Messages.Pattern();
        }
        Pattern.MergeFrom(other.Pattern);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            if (pattern_ == null) {
              pattern_ = new global::SM.Service.Messages.Pattern();
            }
            input.ReadMessage(pattern_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
